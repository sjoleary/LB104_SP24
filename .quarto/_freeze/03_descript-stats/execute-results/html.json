{
  "hash": "3840c406ea160ebc5623e563d7c818fb",
  "result": {
    "markdown": "# Introduction to descriptive statistics\n\n\n\n\n\n## Learning Objectives\n\n**After completing this activity, you should be able to**\n\n-   Define descriptive statistics and describe its role in summarizing and describing data sets.\n-   Use `ggplot` to visualize counts of categorical data using bar plots and explain how to interpret them.\n-   Use `ggplot` to visualize distributions of continuous data using histograms and explain how to interpret them.\n-   Recognize and explain how to calculate measures of central tendency, including mean, median, and mode, and understand when each is appropriate to use.\n-   Recognize and explain how to calculate measures of variability, including range, variance, and explain how they describe the spread of data.\n-   Use `R` to calculate standard descriptive statistics.\n\n**Quantitative research** is a core component of the natural sciences, including biology. Here, we collect and analyze numerical data[^03_descript-stats-1] to find patterns and averages, test causal relationships, generalize results based on a specific sample to the whole population and be able to make predictions beyond that specific case. Over the last few decades the availability of computational power and the ability to generate increasingly large data sets[^03_descript-stats-2] means that arguably all biology has become computational biology and your ability to apply statistics is increasingly essential to pursue a career in most biological fields including genetics, ecology, animal behavior, environmental science etc. This semester as you design different research projects you will learn how analyze data using `R`.\n\n[^03_descript-stats-1]: data is plural, a single numerical observation would be a **datum**\n\n[^03_descript-stats-2]: This is why we frequently also call this the \"Era of Big Data\".\n\nAfter you have performed an observational or controlled experiment and compiled your individual observations into a **data set**, your next step will be to analyze that data and draw conclusions from the data using statistics. The goal of **descriptive statistics** is to summarize and describe the characteristics of a data set. By contrast, **inferential statistics** are applied to allow you to make generalizations about the population based on your sample or to test a specific **hypothesis**.\n\n## Organizing and summarizing raw data using descriptive statistics\n\nTo learn how to use `R` to generate descriptive statistics we are going to explore a data set collected from 2007 to 2009 by Dr. Kristen Gorman with the Palmer Station Long Term Ecological Research Program which is part of the US Long Term Ecological Research Network [@gormanEcologicalSexualDimorphism2014].\nWe are going to use a curated version[^03_descript-stats-3] of the data set. You can install it by executing the following code chunk[^03_descript-stats-4]:\n\n[^03_descript-stats-3]: This means that the data wrangling has already been done for us and we can directly access a tidy data set.\n\n[^03_descript-stats-4]: You will only have to do this once. Note that the `eval` option of your code chunk is set to `false` so that when you render your document it will not execute this code chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"palmerpenguins\")\n```\n:::\n\n\nNow we can get started by loading several `R` libraries, including the `palmerpenguins` library, that contain the functions we will need to explore this data set\n\n\n::: {.cell}\n\n:::\n\n\nLet's take a quick look at what variables the data set contains using the function `glimpse()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# overview of rows and columns\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n:::\n\n\nYou can also use the function `View()` to open the `data.frame` in the Viewer Pane.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# open dataframe in Viewer\nView(penguins)\n```\n:::\n\n\nWe generally differentiate between two different types of variables:\n\n-   **Continuous variables** are numeric variables that can take any value within a given range; they are typically measured on interval or ratio scales[^03_descript-stats-5], allowing for meaningful mathematical operations like addition and subtraction.\n-   **Categorical variables** represent categories or groups and can take on a limited, distinct set of values; they are either measured on a nominal scale[^03_descript-stats-6] or an ordinal scale[^03_descript-stats-7].\n\n[^03_descript-stats-5]: These are both types quantitative scales: An interval scale is a measurement scale where the intervals between consecutive values are equal, but the scale lacks a true zero point. A ratio scale has the same properties but also a true zero point indicating the absence of the measured quantity making the ratios of measurements meaningful.\n\n[^03_descript-stats-6]: Categories are assigned labels with no inherent order or ranking\n\n[^03_descript-stats-7]: There is a meaningful order to the categories.\n\n\n::: {.callout-tip title=\"Consider this\"}\n\nTake a look at the data set in the Viewer Pane and get an overview of what information it contains.\n\n-   How many different species were included?\n-   On how many islands where observations made?\n-   When were the observations made?\n-   What biological measurements were taken?\n-   How many individual observations are there?\n\nIndicate which of these variables are **continuous** and which are **categorical** variables.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\nYou can see that we observations of three different species of penguins (Adelie, Chinstrap, Gentoo) on three different islands in the Antarctica (Togersen, Dream, Biscoe). These are all categorical variables.\n\nThe biological measurements include sex (categorical variable) as well as several continuous measurements:\n\n-   body mass\n-   flipper length\n-   beak measurements (depth, length)\n\n:::\n\nAs you probably noticed having to scroll through **raw data**[^03_descript-stats-8] on 344 individuals that were observed, it is difficult to get much information on general patterns. You were probably able to scroll through and figure out how many different islands were observed and what species were counted and that both males and females were observed - but would you be able to make a statement about whether some species are more common on some islands compared to others? Whether there are more males or females in the data set? If there are differences in size among species? Among sexes within species? What a typical beak size looks like?\n\n[^03_descript-stats-8]: Unprocessed data comprising all the individual observations.\n\nGenerally our first step in analyzing a data set would be to apply descriptive statistics to summarize the data and identify the following three characteristics\n\n1.  Frequency Distribution\n2.  Measures of central tendency\n    -   mean\n    -   median\n    -   mode\n3.  Measures of variability\n    -   range\n    -   standard deviation\n    -   variance\n    -   interquartile range\n\nYou can apply these statistics to assess only one variable at a time (**univariate analysis**) or to compare two (**bivariate analysis**) or more (**multivariate analysis**) variables.\n\n## Frequency Distribution\n\n### Simple frequency distribution\n\nEvery data set is made up of a distribution of values. We can summarize the frequency of every possible value of a variable using either counts or by indicating the proportion of all observations that take on a specific value.\n\nFor example we might want to know how many individuals of each species where observed in the data set. To do this we would create a frequency distribution table that lists every possible value or measurement (in this case the species) and the how many times each value was observed.\n\nWe can have `R` do the work for us using the function `count()`and specifying which column the number of observations per value should be counted for[^03_descript-stats-9].\n\n[^03_descript-stats-9]: You will frequently see that we link lines of codes using `%>%` which is called a \"pipe\". You can interpret this as you telling R \"and now do this\". The reason we call this piping is tha the first line of code creates and output and then we are saying \"take this output and now make that the input and do this\" as if we were creating a giant marble run.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# count number of individual per species\npenguins %>%\n  count(species) %>%\n  kable()\n```\n\n::: {.cell-output-display}\n|species   |   n|\n|:---------|---:|\n|Adelie    | 152|\n|Chinstrap |  68|\n|Gentoo    | 124|\n:::\n:::\n\n\nFrequently, it is more helpful to compare relative proportions. We can do this by creating a new column using the function `mutate()`. Then, we give it the column name for the column we want to create and define how the content for each row should be calculated based on existing values. In this case, we divide the content of column `n` (which contains the counts) by the number of individuals observed by the total number of all penguins in the data set which we can calculate as `sum(n)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create frequency table\npenguins %>%\n  count(species) %>%                 # count number of observations\n  mutate(percent = n/sum(n)*100) %>% # calculate percent\n  kable(digits = 1)                  # print table with 1 digit\n```\n\n::: {.cell-output-display}\n|species   |   n| percent|\n|:---------|---:|-------:|\n|Adelie    | 152|    44.2|\n|Chinstrap |  68|    19.8|\n|Gentoo    | 124|    36.0|\n:::\n:::\n\n\nThis gives us some insight into fundamental patterns, for example, Adelie penguins are the most commonly at 44% while Chinstrap penguins are the most rare at 19%.\n\n::: {.callout-tip title=\"Give it a try\"}\n\nModify/complete the code below to create a frequency table that shows the counts and proportion of males and females in the data set.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  count(sex) %>%\n  mutate(percent = n/sum(n)*100) %>%\n  kable(digits = 1)\n```\n\n::: {.cell-output-display}\n|sex    |   n| percent|\n|:------|---:|-------:|\n|female | 165|    48.0|\n|male   | 168|    48.8|\n|NA     |  11|     3.2|\n:::\n:::\n\n\n:::\n\nSo far, we have been looking at frequencies of occurrences across the entire data set, however, in our case we have observations from three different islands. One question we probably have is whether the distribution of different penguin species is consistent across the different locations.\n\nOne of the advantages of using `R` is that we can add just one additional line of code to group our data by island and then count the number of observations per island.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  group_by(island) %>%               # group data by island\n  count(species) %>%                 # count number of observations in each subset\n  pivot_wider(names_from = species,  # create one column per species\n              values_from = n) %>%   # add counts per island per island/species\n  kable()\n```\n\n::: {.cell-output-display}\n|island    | Adelie| Gentoo| Chinstrap|\n|:---------|------:|------:|---------:|\n|Biscoe    |     44|    124|        NA|\n|Dream     |     56|     NA|        68|\n|Torgersen |     52|     NA|        NA|\n:::\n:::\n\n\nAgain, just by looking at simple descriptive stats comparing distribution of observations across these categories we hace gained a lot of insight and we now see that the islands are quite different in terms of the which species are present.\n\nBoth species and sex are categorical variables, so if we wanted to visualize the distribution we would typically use a **bar chart** where we plot the different categories of a value on the x axis and then scale the height of each bar to correspond to the number of individuals observed.\n\nWe can do this using the function `ggplot()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = species)) +  # specify data frame and column name to plot on x-axis\n  geom_bar(stat = \"count\",            # define chart type as bar plot\n           color = \"black\",           # define color of bar lines\n           fill = \"darkorange\") +     # define color of bars\n  labs(x = \"species\",                 # x axis label\n       y = \"number of individuals\") + # y axis label\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![Number of individuals observed per species.](03_descript-stats_files/figure-html/fig-species-1.png){#fig-species width=672}\n:::\n:::\n\n\nWe already know from looking at the frequency table that the patterns are quite different across the islands. We can similarly add a line of code to plot the counts for each island in a separate bar plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# define colors to use\ncol <- c(\"darkorange\", \"purple\", \"cyan4\")\n\n\nggplot(penguins,                             # define data set to plot\n       aes(x = species,                      # define variables to plot on x axis\n           fill = species)) +                # color code bars by species\n  geom_bar(stat = \"count\",                   # define chart type as bar plot\n           color = \"black\") +         \n  facet_grid(. ~ island) +                   # create separate plots per island\n  scale_fill_manual(values = col) +          # define colors for fill\n  labs(x = \"species\",                        # x axis label\n       y = \"number of individuals\") +        # y axis label\n  theme_classic() +\n  theme(legend.position = \"bottom\")          # place legend underneath figure\n```\n\n::: {.cell-output-display}\n![Number of individuals observed per species on each island.](03_descript-stats_files/figure-html/fig-species-island-1.png){#fig-species-island width=672}\n:::\n:::\n\n\n### Grouped (binned) frequency distributions\n\nWhat about the distribution of some of the other values in our data set? For example, we have measured the body mass of each individual[^03_descript-stats-10]. Therefore, we probably want to know what the distribution of body size is for each of the penguin species.\n\n[^03_descript-stats-10]: For second visualize a scientist with a scale and a bunch of penguins standing in line waiting to be weighed.\n\nHowever, this data set is different from counting the number of individuals in a specific category like we did above, body weight is a **continuous** variable. In this case, we would use a **histogram** to visualize the distribution. We do this by grouping our observations into bins that represent equally sized groups of possible values.\n\nFor example, we could create bins of 100g and then count how many individuals weigh between 0-50g, 50-100g etc. Then we can plot those bins on the x-xis and the scale each bar to correspond to the number of individuals whose weight falls into that bin.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 100,             # define bin width\n                 color = \"black\") +\n  facet_grid(. ~ species) +                  # create separate plot per species\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![Distribution of body weight for each species.](03_descript-stats_files/figure-html/fig-body-mass-1.png){#fig-body-mass width=672}\n:::\n:::\n\n\nHistograms are really helpful for exploring general patterns in the distribution of your data because you easily determine\n\n-   All the values occurring in your data set\n-   Which values occur more/less frequently (the \"shape\")\n-   The center of your values\n-   The amount of variability in your data\n\nIn short, assessing the distribution with a histogram gives you an idea of central tendency and variability of the data set as well - descriptive statistics that we'll dig into in just a bit.\n\n::: {.callout-tip title=\"Give it a try\"}\n\nWe should think a little bit about how important choosing the \"right\" bin size is - or if there even is a \"right\" bin size. Manipulate the code below to try 3 different bin sizes. Compare the figures you produce with your lab mates sitting near you and briefly describe what you learn about picking the right bin size.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# try a small bin size\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 10,             # define bin width\n                 color = \"black\") +\n  facet_grid(. ~ species) +                  # create separate plot per species\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# try a large bin size\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 100,             # define bin width\n                 color = \"black\") +\n  facet_grid(. ~ species) +                  # create separate plot per species\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# try a REALLY LARGE bin size\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 1000,             # define bin width\n                 color = \"black\") +\n  facet_grid(. ~ species) +                  # create separate plot per species\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\n::: {.callout-tip title=\"Consider this\"}\n\nLet's spend a little bit of time thinking about how to correctly interpret a histogram.\n\nImagine you and two of your lab mates are riding your snowmobiles on one of the Antarctic islands in the study. You come across a Chinstrap penguin colony. They are very cute, so as you (carefully) drive through the penguins you randomly grab five of them (let's assume you have a little snowmobile side car). One of your lab mate comes across an Adelie penguin colony and also grabs 5 random pengiuns, while your last partner in crime nags 5 Gentoo penguins.\n\nYou meet back up at your research station - discuss with your lab mates how heavy you think each of your sets of penguins are. Be as specific as possible.\n\nBonus question - given your data set who do you think found their colony first?\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\nGiven that your histogram shows values from roughly 2,500g to 5,000g for Adelie penguins, you can probably assumed that your pengiuns are somewhere in there. But you can be even more exact, if you carefully look at the height of the bars - they higher bar the more common than weight has been observed and this means that there is a higher probability that your penguins are in that weight bin.\n\nEven though the absolute height of the bars is lower for Chinstrap penguins is smaller (because there are fewer in the data set), the distribution is actually quite similar and those two sets of penguins are probably quite similar in weight.\n\nThe smallest observed Gentoo penguins are about as large as the smallest Adelie and Chinstrap penguins. They most commonly are observed to be between 4,500 and 5,500g - your penguins are likely around that size.\n\n:::\n\n:::\n\n### Normal distribution\n\nThe data set can have a wide range of shapes and the shape itself will give you some insight into the statistical properties which can be useful down the line, as you make decisions about for example what statistical test to apply[^03_descript-stats-11].\n\n[^03_descript-stats-11]: Statistical tests make specific assumptions about the data, if those assumptions are violated your conclusions are not well supported even if your test results say they should be\n\nOne of the most well-understood distribution is called a **normal distribution**. Because it is bell-shaped it is also frequently referred to as the **bell curve**.\n\nExecute the code chunk below to generate a normally distributed data set and plot it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# randomly draw values from a specified normal distribution\ndf <- rnorm(n = 1000,   # set number of observations\n            mean = 0,   # determine mean\n            sd = 1) %>% # set standard deviation\n  as.data.frame() %>%\n  setNames(\"obs\")\n\n# plot histogram\nggplot(df, aes(x = obs)) +\n  geom_histogram(binwidth = 0.5,\n                 color = \"black\", fill = \"darkorange\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![Distribution of 1,000 observations randomly drawn from a normal distribution with mean = 0 and standard deviation = 1.](03_descript-stats_files/figure-html/fig-norm-dist-1.png){#fig-norm-dist width=672}\n:::\n:::\n\n\nTake a look at the figure you just plotted and identify these key characteristics of a normal distribution:\n\n-   There is a singe peak right around the center line.\n-   Most of the observations are at the center of the distribution.\n-   The distribution is symmetric around the center line.\n\n::: {.callout-tip title=\"Consider this\"}\n\nTake another look at your penguin body mass histograms and argue whether or not you think we can assume that body mass is normally distributed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 100,             # define bin width\n                 color = \"black\") +\n  facet_grid(. ~ species) +                  # create separate plot per species\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![Distribution of body weight for Adelie, Chinstrap, and Gentoo penguins. Weights are binned in 100g increments.](03_descript-stats_files/figure-html/fig-weight-histog-I-1.png){#fig-weight-histog-I width=672}\n:::\n:::\n\n\n:::\n\n::: {.callout-note title = \"Hint\" collapse=\"true\"}\n\nA good way to argue this is to take the list of key characteristics from the list above and explain whether or not you see this in your data set.\n\n:::\n\nOne thing you will notice is that your choice of bin width will play a bit of a role. For example, let's re-plot the same figure with a slightly larger binwidth and see if you change your mind.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 250,             # define bin width\n                 color = \"black\") +\n  facet_grid(. ~ species) +                  # create separate plot per species\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![Distribution of body weight for Adelie, Chinstrap, and Gentoo penguins. Weights are binned in 250g increments.](03_descript-stats_files/figure-html/fig-weight-histog-II-1.png){#fig-weight-histog-II width=672}\n:::\n:::\n\n\n::: {.callout-tip title=\"Consider this\"}\n\nAnother factor that we might need to consider is that our data set contains both males and females. Sexual dimorphism is common in animal species which can include that one sex is larger compared to the other.\n\nLet's create separate plots of each species and sex. Then, argue whether or not you think the data is normally distributed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = body_mass_g,        # define data set & variable on x-axis\n                     fill = species)) +      # color code by species\n  geom_histogram(binwidth = 150,             # define bin width\n                 color = \"black\") +\n  facet_grid(sex ~ species) +                  # create separate plot per species and sex\n  scale_fill_manual(values = col) +          # define color palette\n  labs(x = \"body mass [g]\",                  # x-axis title\n       y = \"number of individuals\") +        # y-axis title\n  theme_classic() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![Distribution of body weight for male and female Adelie, Chinstrap, and Gentoo penguins. Weights are binned in 150g increments.](03_descript-stats_files/figure-html/fig-weight-histog-sex-1.png){#fig-weight-histog-sex width=672}\n:::\n:::\n\n\n:::\n\n### Sample vs Population\n\nBefore we move on to the next statistic, let's take a moment to think about the difference between a **sample** and a **population**. Our data set is a **sample** of 344 penguins. That is the number of individuals that were observed. However, unless this was a comprehensive census in which the researchers tracked down every single penguin on those three islands this is only a subset of the actual **population**, which would be all available observations (in this case pengiuns) at a specific point in time for a specific define geographic region (in this case the three islands).\n\nThe goal is to take a sample that is representative of the population. The larger our sample, the larger the proportion of the population is included which means that our sample will more closely resemble the statistical attributes including the distribution of the population.\n\n::: {.callout-tip title=\"Give it a try\"}\n\nManipulate the code below to simulate 4 different normal distributions but for three different sample sizes and compare how this affects the distributions. Take a peak at your lab mate's plots as well, and see if your plots look the same for the same sample size. Assume that body mass of penguins is normally distributed, how large do you think sample sizes should be to make sure your sample is representative.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use a small sample size\ndf <- rnorm(n = 10,   # set number of observations\n            mean = 0,   # determine mean\n            sd = 1) %>% # set standard deviation\n  as.data.frame() %>%\n  setNames(\"obs\")\n\n# plot histogram\nggplot(df, aes(x = obs)) +\n  geom_histogram(binwidth = 0.25,\n                 color = \"black\", fill = \"darkorange\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# use a medium size sample size\ndf <- rnorm(n = 100,   # set number of observations\n            mean = 0,   # determine mean\n            sd = 1) %>% # set standard deviation\n  as.data.frame() %>%\n  setNames(\"obs\")\n\n# plot histogram\nggplot(df, aes(x = obs)) +\n  geom_histogram(binwidth = 0.25,\n                 color = \"black\", fill = \"darkorange\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# use a large size sample size\ndf <- rnorm(n = 1000,   # set number of observations\n            mean = 0,   # determine mean\n            sd = 1) %>% # set standard deviation\n  as.data.frame() %>%\n  setNames(\"obs\")\n\n# plot histogram\nggplot(df, aes(x = obs)) +\n  geom_histogram(binwidth = 0.25,\n                 color = \"black\", fill = \"darkorange\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-18-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# use a REALLY large size sample size\ndf <- rnorm(n = 10000,   # set number of observations\n            mean = 0,   # determine mean\n            sd = 1) %>% # set standard deviation\n  as.data.frame() %>%\n  setNames(\"obs\")\n\n# plot histogram\nggplot(df, aes(x = obs)) +\n  geom_histogram(binwidth = 0.25,\n                 color = \"black\", fill = \"darkorange\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](03_descript-stats_files/figure-html/unnamed-chunk-18-4.png){width=672}\n:::\n:::\n\n\nYou should see that the smaller the sample size the more oddly shaped the distributions. If you regenerate a sample of a normal distribution for the same sample size you will also notice that for small sample sizes those plots jump around quite a bit.\n\n:::\n\n## Measures of central tendency\n\nMeasures of central tendency give us an estimate of the center (average) of a data set. This is a complicated (but very specific way) of way it tells us what the \"average\" is. Typically, when you hear the term averable you probably are thinking of the **mean**, but other important metrics are the **median** and the **mode** which give us additional important information about a data set.\n\n-   The **mean** is often used synonymous to average and the metric you are likely most familiar with. You calculate it by adding up all the values and divide by the total number of observations. This is metric is most informative when the data has a normal distribution.\n-   The **median** is the value in the middle of the data set. This means that 50% of values fall below and 50% fall above. For a normal distribution the mean and the mode should be very similar. For skewed data sets this is a more approporiate metric to determine centrality.\n-   The **mode** is most commonly observed value, it's not typically used in statistics, so we are going to skip it here.\n\nLet's look at each one in a bit more detail.\n\n### The mean\n\nThe **mean** is the sum of all the values divided by the **sample size** (number of observations or values). We can write this as a mathematical formula as follows\n\n\\$\\$\n\n\\bar{x} = \\sum x\\_{n} = \\frac{x_{1} + x_{2} + x_{3} + ... x_{n}}{n}\n\n\\$\\$ {#eq-mean}\n\nwith $\\bar{x}$ as the sample mean[^03_descript-stats-12] , $n$ is the sample size[^03_descript-stats-13], and $x_{n}$ being the individual observations.\n\n[^03_descript-stats-12]: It's important to note that we are almost always determining the **sample mean** \\bar{x} and then use it as an estimate of the true **population mean** $\\mu$.\n\n[^03_descript-stats-13]: If you are referring to the true size of the population we would generally denote that as $N$.\n\nThe @eq-mean is implemented in the base `R` function `mean()` which we can easily group our data by species using `group_by()` and then calculate the mean body mass using the function `summarize()`. We need to give it a column name for a summary statistic and then tell it how to calculate the contents for that column. In this case we will specify that we want to apply the function `mean()` to the column `body_mass_g`. We will use the argument `na.rm` to tell `R` to ignore any missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%                                                       # define data frame\n  group_by(species) %>%                                            # create subsets by species\n  summarize(mean_body_mass = mean(body_mass_g, na.rm = TRUE)) %>%  # calculate mean\n  kable(digits = 1)                                                # print table\n```\n\n::: {.cell-output-display}\n|species   | mean_body_mass|\n|:---------|--------------:|\n|Adelie    |         3700.7|\n|Chinstrap |         3733.1|\n|Gentoo    |         5076.0|\n:::\n:::\n\n\n### The median\n\nTo determine the median by hand, you would first determine if there is an odd or an even number of observations. Then you need to order all your observations from smallest to largest. If there is an odd number of observations, the median is the middle value[^03_descript-stats-14]. If you have an even number of observations you would determine the median by finding the values at the positions $\\frac{n}{2}$ and $\\frac{n+1}{2}$ and then the median is the mean of those two values.\n\n[^03_descript-stats-14]: You can determine that position as $\\frac{n+1}{2}$ with $n$ being the sample size.\n\nFortunately, we again have a base `R` function (`median()`) that will allow us to quickly calculate the median for a set of values contained in a single column of a data frame. We can do this using the same functions as above, however, we will add an additional argument to the `summarize()` function that we would like to add a column called `median_body_mass` that should contain the values calculated by apply the function `median()` to the column `body_mass_g`, again we will specify to ignore any missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%                                                           # define data frame\n  group_by(species) %>%                                                # create subsets by species\n  summarize(mean_body_mass = mean(body_mass_g, na.rm = TRUE),          # calculate mean\n            median_body_mass = median(body_mass_g, na.rm = TRUE)) %>%  # calculate median\n  kable(digits = 1)                                                    # print table\n```\n\n::: {.cell-output-display}\n|species   | mean_body_mass| median_body_mass|\n|:---------|--------------:|----------------:|\n|Adelie    |         3700.7|             3700|\n|Chinstrap |         3733.1|             3700|\n|Gentoo    |         5076.0|             5000|\n:::\n:::\n\n\n::: {.callout-tip title=\"Consider this\"}\n\nCompare and contrast the mean and median body weight for our three penguin data sets in the table you have just produced.\n\n-   Discuss whether these values are surprising after having spent (maybe too much?) time looking at the histograms.\n-   Consider what this means in the context of what you have learned about the distribution of data sets.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\nEven though our Adelie and Chinstrap penguins differ slightly (33g) in their mean body mass, they have the same median weight. Gentoo penguins are on average 2,000g heaver.\n\nIn all three cases the mean and mode are almost identical, this is indicative of a normal distribution, if a distribution is skewed left (a long tail to the right) the median will be smaller than the mean and if it is skewed right (a long tail to the left) the median will be larger than the mean.\n\n:::\n\n## Measures of variability\n\nThe last category we have to think about is what metrics we can use to describe the variance of the a data set. We use measures of centrality to describe the most typical values we should expect, however most things in nature are not the same. Therefore, we need metrics that tell us how different we should expect values to be from the mean or median to have a sense of how spread out the values are going to be.[^03_descript-stats-15].\n\n[^03_descript-stats-15]: Think of this as you now knowing how heave a penguin is on average but you want to know how large you should expect the smallest and the largest penguins to be, how different on average the weight of a penguin is going to be from the mean.\n\nTypical metrics that are used to describe variability are\n\n-   the **range** tells us how far apart the observed values are; described either as the minimum and maximum observed value or as the difference between the two.\n-   the **variance** is the average of the squared deviations of each value from the mean.\n-   the **standard deviation** is the average amount of variability in the data set and describe how far away and observed value is from the mean on average.\n\n### The range\n\nOne of the most straight forward metrics we can determine to describe the variability of the data set is the **range**. To do this, we simply determine the highest and lowest value for a variable. We can easily add these values to the table we have been expanding by adding additional lines to apply the function `min()` and `max()` to the `body_weight_g` column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%                                                           # define data frame\n  group_by(species) %>%                                                # create subsets by species\n  summarize(mean_body_mass = mean(body_mass_g, na.rm = TRUE),          # calculate mean\n            median_body_mass = median(body_mass_g, na.rm = TRUE),      # calculate median\n            min_body_mass = min(body_mass_g, na.rm = TRUE),            # determine largest value\n            max_body_mass = max(body_mass_g, na.rm = TRUE)) %>%        # determine largest value\n  kable(digits = 1) \n```\n\n::: {.cell-output-display}\n|species   | mean_body_mass| median_body_mass| min_body_mass| max_body_mass|\n|:---------|--------------:|----------------:|-------------:|-------------:|\n|Adelie    |         3700.7|             3700|          2850|          4775|\n|Chinstrap |         3733.1|             3700|          2700|          4800|\n|Gentoo    |         5076.0|             5000|          3950|          6300|\n:::\n:::\n\n\nEven though the range is easy to determine and can be informative in some cases, it is actually rarely used as a measure of variability because the sample range does not always reflect the range of the actual population. There generally is a pattern where up to a certain point your range will increase with sample size.\n\n::: {.callout-tip title=\"Consider this\"}\n\nWe are going to plot all of our observations for body mass on the x-axis grouped by species. Use this figure to argue why using the range as a measure of variability can be misleading in some cases because it ignores important contextual information.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +\n  geom_jitter(size = 3, shape = 21, alpha = .4, height = .1) +\n  scale_fill_manual(values = col) +\n  labs(x = \"body mass [g]\", y = \"species\") +\n  theme_classic() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![Observed body weight for Adelie, Chinstrap, and Gentoo pengiuns.](03_descript-stats_files/figure-html/fig-body-mass-jitter-1.png){#fig-body-mass-jitter width=672}\n:::\n:::\n\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\nYou can see that Chinstrap penguins have a wider range compared to the Adelie penguins but most of their points actually cluster more tightly compared to the other species. We don't know if this is just because their sample size is smaller and so we are more likely not to observe the full range of body weight exhibited by Gentoo populations or if these are true outliers.\n\n:::\n\n### Variance\n\nOne way we can avoid the issues that can be introduced by using the range to describe variability is to determine how far away each point is from the mean value (**deviation from the mean**).\n\nLet's visualize this by plotting all the weights for the Chinstrap penguins on the x-axis and adding a line between each point and the mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create data frame with only chinstrap penguins\nchinstrap <- penguins %>%\n  filter(species == \"Chinstrap\") %>%\n  rownames_to_column(\"indv\")\n\n# plot all observed weights\nggplot(chinstrap, aes(x = body_mass_g, y = indv)) +\n  geom_vline(aes(xintercept = mean(body_mass_g, na.rm = TRUE)), \n             color = \"darkred\", size = 1) +\n  geom_segment(aes(x = body_mass_g, xend = mean(body_mass_g),\n                   yend = indv)) +\n  geom_point(size = 3, shape = 21, alpha = .5, fill = \"cyan4\") +\n  labs(x = \"body mass [g]\") +\n  theme_classic() +\n  theme(axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank())\n```\n\n::: {.cell-output-display}\n![Body weights for Chinstrap penguins. Red line indicates mean body mass. Black lines denote the deviation from the mean for each observation.](03_descript-stats_files/figure-html/fig-deviation-mean-1.png){#fig-deviation-mean width=672}\n:::\n:::\n\n\nAt first glance, just summing up all the values seems like a simple solution to get the \"total amount of deviation\" in the data set. However, some of our values are positive while others are negative so that would be problematic because they will cancel each other out.\n\nInstead, we need to square each deviation and then we can sum them up[^03_descript-stats-16]. The greater the variability in our data, the greater the **sum of the squares**. We generally refer to the sum of the squared deviations as the **variance** $s^{2}$. To calculate the sample variance, you need to subtract each value from the sample mean, square each value, add up all the values, and then divide this sum by the number of samples minus 1[^03_descript-stats-17].\n\n[^03_descript-stats-16]: Squaring the mean means that our values are always positive. It also means that values that are at extreme distances from the mean will have a greated effect on the variability.\n\n[^03_descript-stats-17]: We do this to correct for the fact that we are calculting the sample variance and not the variance of the true population.\n\n\\$\\$\n\ns\\^{2}=\\frac{\\sum (x_{i}-\\bar{x})^2}{n-1}\n\n\\$\\$ {#eq-variance}\n\nWith $x_{i}$ being in individual observation, $\\bar{x}$ the sample mean, and $n$ the sample size.\n\nAgain, it is important that we differ between the sample variance that you can calculate using your data set and provides an estimate of the population variance.\n\nYou may have assumed that we can calculate this in R using a function called `variance()` - close, it is actually called `var()`, but you are correct that we can add the variance in body mass measurements for each pengiun species to our summary stats table using the same syntax we have beein applying.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%                                                           # define data frame\n  group_by(species) %>%                                                # create subsets by species\n  summarize(mean_body_mass = mean(body_mass_g, na.rm = TRUE),          # calculate mean\n            median_body_mass = median(body_mass_g, na.rm = TRUE),      # calculate median\n            min_body_mass = min(body_mass_g, na.rm = TRUE),            # determine largest value\n            max_body_mass = max(body_mass_g, na.rm = TRUE),            # determine largest value\n            var_body_mass = var(body_mass_g, na.rm = TRUE)) %>%         # calculate variance\n  kable(digits = 1) \n```\n\n::: {.cell-output-display}\n|species   | mean_body_mass| median_body_mass| min_body_mass| max_body_mass| var_body_mass|\n|:---------|--------------:|----------------:|-------------:|-------------:|-------------:|\n|Adelie    |         3700.7|             3700|          2850|          4775|      210282.9|\n|Chinstrap |         3733.1|             3700|          2700|          4800|      147713.5|\n|Gentoo    |         5076.0|             5000|          3950|          6300|      254133.2|\n:::\n:::\n\n\n::: {.callout-tip title=\"Consider this\"}\n\nCompare and contrast the **range** and the **variance** for body mass in across the different species and argue which metric you think is more informative.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\nAs indicate before, Adelie have a smaller range of body mass compared to Chinstrap penguins, however, we can see that the variance of Chinstrap is quite a bit smaller. Recall the visualization that showed that Chinstrap body weights points cluster closer together compared to Adelie pengiuns despite those extreme values that are creating the misleading greater range.\n\n:::\n\n### Standard deviation\n\nOne of the drawbacks of using the variance to describe variability is that because we have squared the deviations our unites are no longer meaningful[^03_descript-stats-18], we can compare variance by magnitude but it is not helpful to say that the variance in Adelie penguin body weight is about 62,000 squared grams larger compared to Chinstrap penguins.\n\n[^03_descript-stats-18]: The we of course remain open to good ideas on how to interpret \"square grams\".\n\nTo get around this issue, we generally calculate the **standard deviation** $s$ by drawing the square root of the variance.\n\n$$\n\ns = \\sqrt{s^{2}}\n\n$$ {#eq-std}\n\nWe can add this to our summary stats table using the function `sd()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%                                                           # define data frame\n  group_by(species) %>%                                                # create subsets by species\n  summarize(mean_body_mass = mean(body_mass_g, na.rm = TRUE),          # calculate mean\n            median_body_mass = median(body_mass_g, na.rm = TRUE),      # calculate median\n            min_body_mass = min(body_mass_g, na.rm = TRUE),            # determine largest value\n            max_body_mass = max(body_mass_g, na.rm = TRUE),            # determine largest value\n            var_body_mass = var(body_mass_g, na.rm = TRUE),            # calculate variance\n            std_body_mass = sd(body_mass_g, na.rm = TRUE)) %>%         # calculate standard deviation\n  kable(digits = 1) \n```\n\n::: {.cell-output-display}\n|species   | mean_body_mass| median_body_mass| min_body_mass| max_body_mass| var_body_mass| std_body_mass|\n|:---------|--------------:|----------------:|-------------:|-------------:|-------------:|-------------:|\n|Adelie    |         3700.7|             3700|          2850|          4775|      210282.9|         458.6|\n|Chinstrap |         3733.1|             3700|          2700|          4800|      147713.5|         384.3|\n|Gentoo    |         5076.0|             5000|          3950|          6300|      254133.2|         504.1|\n:::\n:::\n\n\n::: {.callout-tip title=\"Consider this\"}\n\nWe frequently report means as mean +/- the standard deviation. Describe your results comparing the body mass of these three species using this format.\n\n:::\n\n::: {.callout-note title=\"Answer\" collapse=\"true\"}\n\nGentoo penguins were observed to be the largest species with a mean body mass of 5,076g +/- 504g. Adelie and Chinstrap penguins are smaller with observed means of 3,700 +/- 458g and 3,733g +/- 384g, respectively, indicating that though on average they are similar in size, Adelie penguins exhibit a larger variability.\n\n:::\n\n\n## Homework\n\nDecide if have them modify code to do this for flipper size ",
    "supporting": [
      "03_descript-stats_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}