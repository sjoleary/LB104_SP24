#| label: tbl-ph
#| tbl-cap: "Descriptive statistics of bark pH."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "bark_ph"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-ph-tree-type
#| tbl-cap: "Descriptive statistics of bark pH for each tree type."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_type"
# specify  column that contains data to summarize (response variable)
col_response <- "bark_ph"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: fig-pH-abundance
#| fig-cap: "Relationship of bark pH and overall lichen abundance."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify the column that contains your explanatory (independent) variable
col_explanatory <- "bark_ph"
x_axis_title <- "Bark pH"
# specify the column that contains your response (dependent) variable
col_response <- "coverage_total"
y_axis_title <- "total lichen coverage"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create plot
ggplot(lichen,
aes(x = !!sym(col_explanatory),
y = !!sym(col_response))) +
stat_smooth(method = "lm") +
geom_point() +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic()
# test relationship
lm(formula = reformulate(col_explanatory, col_response),
data = lichen) %>%
summary()
#| label: fig-pH-air-qaulity
#| fig-cap: "Relationship of bark pH and air quality index based on observed lichen morphotypes."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify the column that contains your explanatory (independent) variable
col_explanatory <- "bark_ph"
x_axis_title <- "Bark pH"
# specify the column that contains your response (dependent) variable
col_response <- "air_quality_index"
y_axis_title <- "air quality index"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create plot
ggplot(lichen,
aes(x = !!sym(col_explanatory),
y = !!sym(col_response))) +
stat_smooth(method = "lm") +
geom_point() +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic()
# test relationship
lm(formula = reformulate(col_explanatory, col_response),
data = lichen) %>%
summary()
#| label: tbl-coverage-north
#| tbl-cap: "Descriptive statistics of lichen coverage on the north side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_north"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-east
#| tbl-cap: "Descriptive statistics of lichen coverage on the east side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_east"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-south
#| tbl-cap: "Descriptive statistics of lichen coverage on the south side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_south"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-west
#| tbl-cap: "Descriptive statistics of lichen coverage on the west side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_west"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: fig-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = direction,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = direction),
size = 1.2) +
scale_color_manual(values = col_side) +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic() +
theme(legend.position = "none")
# test relationship
aov(coverage ~ direction,
data = df) %>%
summary()
#| label: tbl-coverage-north
#| tbl-cap: "Descriptive statistics of lichen coverage on the north side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_north"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-east
#| tbl-cap: "Descriptive statistics of lichen coverage on the east side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_east"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-south
#| tbl-cap: "Descriptive statistics of lichen coverage on the south side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_south"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-west
#| tbl-cap: "Descriptive statistics of lichen coverage on the west side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_west"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for each sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west, sample_location) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, !!sym(grp)) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for each sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west, sample_location) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, sample_location %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for each sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west, sample_location) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, sample_location) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = direction,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = direction),
size = 1.2) +
facet_wrap(. ~ sample_location) +
scale_color_manual(values = col_side) +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic() +
theme(legend.position = "none")
# test relationship
aov(coverage ~ sample_location + direction,
data = df) %>%
summary()
#| label: tbl-coverage-north
#| tbl-cap: "Descriptive statistics of lichen coverage on the north side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_north"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-east
#| tbl-cap: "Descriptive statistics of lichen coverage on the east side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_east"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-south
#| tbl-cap: "Descriptive statistics of lichen coverage on the south side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_south"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-west
#| tbl-cap: "Descriptive statistics of lichen coverage on the west side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_west"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for different levels of tree density."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west, tree_density) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, tree_density) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = direction,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = direction),
size = 1.2) +
facet_wrap(. ~ tree_density) +
scale_color_manual(values = col_side) +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic() +
theme(legend.position = "none")
# test relationship
aov(coverage ~ tree_density + direction,
data = df) %>%
summary()
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for different levels of tree density for each sample location."
#| fig-height: 10
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west,
tree_density, sample_location) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, tree_density, sample_location) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = direction,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = direction),
size = 1) +
facet_grid(sample_location ~ tree_density) +
scale_color_manual(values = col_side) +
labs(x = x_axis_title,
y = y_axis_title) +
theme(legend.position = "none")
# test relationship
aov(coverage ~ tree_density + direction + sample_location,
data = df) %>%
summary()
