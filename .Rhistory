#| label: setup
#| include: false
# load libraries for reporting
library(knitr)
# load libraries for data import
library(readr)
library(here)
library(janitor)
# load libraries for data wrangling
library(dplyr)
library(tidyr)
library(tibble)
# load libraries for plotting
library(ggplot2)
library(ggthemes)
# load library for stats
library(infer)
# define your filename
file <- "zone-of-inhibition.tsv" # CHANGE THIS TO YOUR EXACT FILENAME, remember R is case sensitive
# read in data
inhibition <- read_delim(here("data", file), delim = "\t") %>%
clean_names()
# define your filename
file <- "zone-of-inhibition_demo.tsv" # CHANGE THIS TO YOUR EXACT FILENAME, remember R is case sensitive
# read in data
inhibition <- read_delim(here("data", file), delim = "\t") %>%
clean_names()
# take a look at first few lines
head(germination)
# take a look at first few lines
glimpse(germination)
# take a look at first few lines
glimpse(inhibition)
# define your filename
file <- "zone-of-inhibition_demo.tsv" # CHANGE THIS TO YOUR EXACT FILENAME, remember R is case sensitive
# read in data
inhibition <- read_delim(here("data", file), delim = "\t") %>%
clean_names()
# take a look at columns in the data set
glimpse(inhibition)
#| label: tbl-summary
#| tbl-cap: "Summary statistics for zone of inhibition. Mean, median, standard deviation (sd), minimum (min) and maximum (max) length in millimeters for discs soaked in an antiseptic or disinfectant."
# create vector with your group name (change this to YOUR group)
group <- "grp-1"
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(type) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
# create vector with your group name (change this to YOUR group)
group <- "grp-1"
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
# create vector with your group name (change this to YOUR group)
group <- "grp-1"
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
inhibition %>%                            # specify data
filter(group == group)
unique(inhibition$group)
# create vector with your group name (change this to YOUR group)
group <- "grp-1"
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
colnames(inhibition)
inhibition %>%                            # specify data
filter(group == group) %>%    View()          # retain only rows for your group
# create vector with your group name (change this to YOUR group)
group <- "grp-1"
inhibition %>%                            # specify data
filter(group == group) %>%    View()          # retain only rows for your group
View(inhibition)
inhibition %>%                            # specify data
dplyr::filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
inhibition %>%                            # specify data
filter(type == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
dplyr::last_dplyr_warnings()
inhibition %>%                            # specify data
filter(type == group)
inhibition %>%                            # specify data
filter(group == group) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
# create vector with your group name (change this to YOUR group)
group <- "grp-1"
inhibition %>%
filter(group == "grp-1")
# create vector with your group name (change this to YOUR group)
grp <- "grp-1"
inhibition %>%
filter(group == grp)
inhibition %>%                            # specify data
filter(group == grp) %>%              # retain only rows for your group
group_by(chemical) %>%                 # group by treatment
summarize(mean = mean(distance_mm),       # calculate mean
sd = sd(distance_mm),           # calculate standard deviation
median = median(distance_mm),   # determine median value
min = min(distance_mm),         # determine minimum value
max = max(distance_mm))         # determine maximum value
# create dataframe with mean and sd
summary <- inhibition %>%
filter(group == grp) %>%
group_by(chemical) %>%
summarise(mean = mean(distance_mm),
sd = sd(distance_mm))
# pick colors
colors <- c("orange", "cyan")
# plot data
ggplot(summary) +
geom_pointrange(aes(x = chemical,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = chemical),
size = 1.2) +
scale_color_manual(values = colors) +
theme_classic() +
theme(legend.position = "none")
# pick colors
colors <- c("orange", "purple")
# create dataframe with mean and sd
summary <- inhibition %>%
filter(group == grp) %>%
group_by(chemical) %>%
summarise(mean = mean(distance_mm),
sd = sd(distance_mm))
# plot data
ggplot(summary) +
geom_pointrange(aes(x = chemical,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = chemical),
size = 1.2) +
scale_color_manual(values = colors) +
theme_classic() +
theme(legend.position = "none")
# plot data
ggplot(summary) +
geom_pointrange(aes(x = chemical,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = type),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]")
# plot data
ggplot(summary) +
geom_pointrange(aes(x = chemical,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = chemical),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]")
#| label: t-statistic
# calculate observed statistic
observed_statistic <- length %>%             # define data to use
specify(response = distance_mm,              # specify response (dependent) variable
explanatory = chemical) %>%       # specify explanatory (independent) variable
calculate(stat = "diff in means",          # define test statistic to use
order = c("ctrl", "exp"))        # order to subtract explanatory variables
# calculate observed statistic
observed_statistic <- inhibition %>%             # define data to use
specify(response = distance_mm,              # specify response (dependent) variable
explanatory = chemical) %>%       # specify explanatory (independent) variable
calculate(stat = "diff in means",          # define test statistic to use
order = c("ctrl", "exp"))        # order to subtract explanatory variables
# create subset with your data
df <- inhibition %>%
filter(group == grp)
# calculate observed statistic
observed_statistic <- df %>%             # define data to use
specify(response = distance_mm,              # specify response (dependent) variable
explanatory = chemical) %>%       # specify explanatory (independent) variable
calculate(stat = "diff in means",          # define test statistic to use
order = c("ctrl", "exp"))        # order to subtract explanatory variables
# calculate observed statistic
observed_statistic <- df %>%             # define data to use
specify(response = distance_mm,              # specify response (dependent) variable
explanatory = chemical) %>%       # specify explanatory (independent) variable
calculate(stat = "diff in means"          # define test statistic to use
)        # order to subtract explanatory variables
# print test statistic
observed_statistic
# create null distribution
null_dist <- df %>%
specify(response = distance_mm,              # specify response (dependent) variable
explanatory = chemical) %>%       # specify explanatory (independent) variable
hypothesize(null = "independence") %>%     # define null hypothesis
generate(reps = 1000,                      # number of samples to generate null distribution
type = "permute") %>%             # shuffle to break association
calculate(stat = "diff in means"
# define test statistic to use
)        # order to subtract explanatory variables
# visualize null distribution test statistic
null_dist %>%
visualize() +
shade_p_value(observed_statistic,
direction = "greater")
#| label: calculate-p-II
# obtain p-value
null_dist %>%
get_p_value(obs_stat = observed_statistic,
direction = "greater")
# obtain p-value
null_dist %>%
get_p_value(obs_stat = observed_statistic,
direction = "smaller")
# obtain p-value
null_dist %>%
get_p_value(obs_stat = observed_statistic,
direction = "less")
# obtain p-value
null_dist %>%
get_p_value(obs_stat = observed_statistic,
direction = "two sided")
# create dataframe with mean and sd
summary <- inhibition %>%
group_by(type) %>%
summarise(mean = mean(distance_mm),
sd = sd(distance_mm))
# plot data
ggplot(summary) +
geom_pointrange(aes(x = chemical,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = chemical),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]") +
theme_classic() +
theme(legend.position = "none")
# plot data
ggplot(summary) +
geom_pointrange(aes(x = type,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = chemical),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]") +
theme_classic() +
theme(legend.position = "none")
# plot data
ggplot(summary) +
geom_pointrange(aes(x = type,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = type),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]") +
theme_classic() +
theme(legend.position = "none")
# create dataframe with mean and sd
summary <- inhibition %>%
group_by(type, chemical) %>%
summarise(mean = mean(distance_mm),
sd = sd(distance_mm))
summary
# plot data
ggplot(summary) +
geom_pointrange(aes(x = type,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = type),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]") +
theme_classic() +
theme(legend.position = "none")
# plot data
ggplot(summary) +
geom_pointrange(aes(x = chemical,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = type),
size = 1.2) +
scale_color_manual(values = colors) +
labs(x = "chemical tested",
y = "zone of inhibition [mm]") +
theme_classic() +
theme(legend.position = "none")
