summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-south
#| tbl-cap: "Descriptive statistics of lichen coverage on the south side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_south"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-coverage-west
#| tbl-cap: "Descriptive statistics of lichen coverage on the west side of the tree."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_west"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for different levels of tree density."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west, tree_density) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, tree_density) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = direction,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = direction),
size = 1.2) +
facet_wrap(. ~ tree_density) +
scale_color_manual(values = col_side) +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic() +
theme(legend.position = "none")
# test relationship
aov(coverage ~ tree_density + direction,
data = df) %>%
summary()
#| label: fig-location-side-of-tree
#| fig-cap: "Mean lichen coverage for north, east, west, and south aspect of sampled trees for different levels of tree density for each sample location."
#| fig-height: 10
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
x_axis_title <- "Tree aspect"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# create tidy data set with coverage by direction
df <- lichen %>%
select(coverage_north, coverage_east, coverage_south, coverage_west,
tree_density, sample_location) %>%
pivot_longer(names_to = "tree_side", values_to = "coverage", 1:4) %>%
separate(tree_side, into = c("tmp", "direction"), sep = "_") %>%
select(-tmp)
# calculate summary stats
summary <- df %>%
group_by(direction, tree_density, sample_location) %>%
summarize(mean = mean(coverage),
sd = sd(coverage))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = direction,
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = direction),
size = 1) +
facet_grid(sample_location ~ tree_density) +
scale_color_manual(values = col_side) +
labs(x = x_axis_title,
y = y_axis_title) +
theme(legend.position = "none")
# test relationship
aov(coverage ~ tree_density + direction + sample_location,
data = df) %>%
summary()
#| label: set-up
#| include: false
#| message: false
#| error: false
#| warning: false
# load libraries for reporting
library(knitr)
# load libraries for data import
library(readr)
library(here)
library(janitor)
# load libraries for data wrangling
library(dplyr)
library(tidyr)
library(tibble)
library(tidyselect)
# load libraries for plotting
library(ggplot2)
library(ggthemes)
library(OpenStreetMap)
library(sf)
library(osmdata)
library(ggmap)
# load library for stats
library(infer)
# pick a set of colors (you have up 6 sample locations)
col_loc <- c("#555599", "cyan", "gold",
"darkorange", "darkblue", "darkred")
col_tree_density <- c("#DE99D9", "#E021DA", "#470544")
col_tree_type <- c("darkgreen", "green")
col_side <- c("cyan", "darkorange", "purple", "gold")
set.seed(42)
# set options
knitr::opts_chunk$set(
tidy = FALSE,
message = FALSE,
warning = FALSE)
options(htmltools.dir.version = FALSE)
#| label: fig-map
#| fig-cap: "Sample Area Saint Anselm Campus Lichen survey. Individual dots represent sampled trees. Colors correspond to sample areas."
#| collapse: true
#| message: false
#| error: false
#| warning: false
lichen <- read_delim("data/lichen-survey.tsv") %>%
clean_names() %>%
mutate(tree_density = ordered(tree_density,
levels = c("free-standing",
"small-group",
"continuous-forest")))
# get lat/long for plot boundaries
min_lat <- min(lichen$latitude, na.rm = TRUE)
max_lat <- max(lichen$latitude, na.rm = TRUE)
min_long <- min(lichen$longitude, na.rm = TRUE)
max_long <- max(lichen$longitude, na.rm = TRUE)
# pull major street features
big_streets <- opq(bbox = c(min_long-0.0025, min_lat-0.0025,
max_long+0.0025, max_lat+0.0025),
memsize = 2e9) %>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link")) %>%
osmdata_sf()
# pull medium sized streets
med_streets <- opq(bbox = c(min_long-0.0025, min_lat-0.0025,
max_long+0.0025, max_lat+0.0025),
memsize = 2e9) %>%
add_osm_feature(key = "highway",
value = c("secondary", "tertiary", "secondary_link", "tertiary_link")) %>%
osmdata_sf()
# pull small streets
small_streets <- opq(bbox = c(min_long-0.0025, min_lat-0.0025,
max_long+0.0025, max_lat+0.0025),
memsize = 2e9) %>%
add_osm_feature(key = "highway",
value = c("residential", "living_street",
"unclassified",
"service", "footway")) %>%
osmdata_sf()
# pull rivers
rivers <- opq(bbox = c(min_long-0.0025, min_lat-0.0025,
max_long+0.0025, max_lat+0.0025),
memsize = 2e9) %>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
# pull railways
railway <- opq(bbox = c(min_long-0.0025, min_lat-0.0025,
max_long+0.0025, max_lat+0.0025),
memsize = 2e9) %>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
# compile plot
ggplot() +
geom_sf(data = rivers$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = 1.5,
alpha = 1) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = 1,
alpha = 1) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = 2,
alpha = 1) +
coord_sf(xlim = c(min_long-0.0025, max_long+0.0025),
ylim = c(min_lat-0.001, max_lat+0.001),
expand = FALSE) +
geom_point(data = lichen,
aes(x = longitude, y = latitude, color = sample_location),
size = 1.5, alpha = 1) +
scale_color_manual(values = col_loc) +
theme_bw() +
theme(legend.position = "bottom")
ggsave("results/map_sample-locations.jpg", dpi = 300)
#| label: tbl-summary-table-tree-density
#| tbl-cap: "."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_explanatory <- "tree_density"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
count(!!sym(col_explanatory)) %>%
pivot_wider(names_from = "sample_location",
values_from = "n") %>%
kable()
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
count(!!sym(col_explanatory)) %>%
pivot_wider(names_from = "sample_location",
values_from = "n") %>%
kable()
#| label: tbl-summary-table-tree-type
#| tbl-cap: "Number of coniferous and deciduous trees sampled at each campus location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_explanatory <- "tree_type"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
count(!!sym(col_explanatory)) %>%
pivot_wider(names_from = "sample_location",
values_from = "n") %>%
kable()
#| label: tbl-summary-table-dbh
#| tbl-cap: "Comparison of mean dbh (diameter at breast height) by sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "dbh_cm"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-summary-table-ph
#| tbl-cap: "Comparison of bark pH by sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "bark_ph"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable()
#| label: tbl-summary-table-ph
#| tbl-cap: "Comparison of bark pH by sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "bark_ph"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response), na.rm = TRUE),
sd = sd(!!sym(col_response), na.rm = TRUE),
min = min(!!sym(col_response), na.rm = TRUE),
max = max(!!sym(col_response), na.rm = TRUE)) %>%
kable(digits = 1)
#| label: tbl-lichen-coverage
#| tbl-cap: "Descriptive statistics of lichen coverage summed across north, south, east, and west side of the tree across all locations."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_total"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)),
min = min(!!sym(col_response)),
max = max(!!sym(col_response))) %>%
kable()
#| label: tbl-location-lichen-coverage
#| tbl-cap: "Descriptive statistics of lichen coverage summed across north, south, east, and west side of the tree for each sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_total"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)),
min = min(!!sym(col_response)),
max = max(!!sym(col_response))) %>%
kable()
#| label: fig-location-lichen-coverage
#| fig-cap: "Comparison of total lichen coverage per tree for all campus sample locations."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify the column that contains your explanatory (independent) variable
col_explanatory <- "sample_location"
x_axis_title <- "campus sample location"
# specify the column that contains your response (dependent) variable
col_response <- "coverage_total"
y_axis_title <- "lichen relative abundance"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
summary <- lichen %>%
group_by(!!sym(col_explanatory)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = !!sym(col_explanatory),
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = !!sym(col_explanatory)),
size = 1.2) +
scale_color_manual(values = col_loc) +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic() +
theme(legend.position = "none")
# test relationship
aov(reformulate(col_explanatory, col_response),
data = lichen) %>%
summary
ggsave("results/fig_location-coverage.jpg", dpi = 300)
#| label: tbl-air-quality
#| tbl-cap: "Descriptive statistics of air quality indicated by lichen morphotype present on trees."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "site"
# specify  column that contains data to summarize (response variable)
col_response <- "air_quality_index"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)),
min = min(!!sym(col_response)),
max = max(!!sym(col_response))) %>%
kable()
#| label: tbl-location-air-quality
#| tbl-cap: "Descriptive statistics of lichen coverage summed across north, south, east, and west side of the tree for each sample location."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "sample_location"
# specify  column that contains data to summarize (response variable)
col_response <- "air_quality_index"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)),
min = min(!!sym(col_response)),
max = max(!!sym(col_response))) %>%
kable()
#| label: fig-location-air-quality
#| fig-cap: "Comparison of air quality index based on lichen morphotype across all campus sample locations."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify the column that contains your explanatory (independent) variable
col_explanatory <- "sample_location"
x_axis_title <- "campus sample location"
# specify the column that contains your response (dependent) variable
col_response <- "air_quality_index"
y_axis_title <- "air quality index"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
summary <- lichen %>%
group_by(!!sym(col_explanatory)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)))
# create plot
ggplot(summary) +
geom_pointrange(aes(x = !!sym(col_explanatory),
y = mean,
ymin = mean-sd,
ymax = mean+sd,
color = !!sym(col_explanatory)),
size = 1.2) +
scale_color_manual(values = col_loc) +
labs(x = x_axis_title,
y = y_axis_title) +
theme_classic() +
theme(legend.position = "none")
# test relationship
aov(reformulate(col_explanatory, col_response),
data = lichen) %>%
summary
#| label: tbl-tree-density-lichen-coverage
#| tbl-cap: "Descriptive statistics of lichen coverage for different levels of tree density."
#| message: false
#| error: false
#| warning: false
# MODIFY THIS SECTION ----
# specify column name to group data & calculate descriptive stats
col_grp <- "tree_density"
# specify  column that contains data to summarize (response variable)
col_response <- "coverage_total"
# DO NOT MAKE MODIFICATIONS BELOW HERE ----
# calculate summary stats for continuous variable
lichen %>%
group_by(!!sym(col_grp)) %>%
summarize(mean = mean(!!sym(col_response)),
sd = sd(!!sym(col_response)),
min = min(!!sym(col_response)),
max = max(!!sym(col_response))) %>%
kable()
